name: CMake Build Matrix

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y libopencv-dev

#      - name: Install dependencies (Windows)
#        if: runner.os == 'Windows'
#        run: |
#          choco install opencv --version=4.5.4
#          echo "C:\tools\OpenCV\x64\vc15\bin" >> $GITHUB_PATH
#          echo "C:\tools\OpenCV\x64\vc15\lib" >> $GITHUB_PATH

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test
        run: ctest --test-dir ${{github.workspace}}/build --build-config ${{env.BUILD_TYPE}}

      # Создание пакета для Ubuntu
      - name: Create package (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          cpack --config ${{github.workspace}}/build/CPackConfig.cmake
          mv ${{github.workspace}}/*.deb ${{github.workspace}}/build/

      # Создание пакета для Windows гребаный
#      - name: Create package (Windows)
#        if: runner.os == 'Windows'
#        run: |
#          cpack --config ${{github.workspace}}/build/CPackConfig.cmake
#          mv ${{github.workspace}}/*.msi ${{github.workspace}}/build/
